<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LMJW Blog</title><link>https://lmjw.github.io/</link><description>Recent content on LMJW Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 28 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://lmjw.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple prost use guid</title><link>https://lmjw.github.io/post/simple-rust-protobuf-grpc-guide/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/simple-rust-protobuf-grpc-guide/</guid><description>Simple tonic/prost example A simple tonic repo setup Using gRPC usually requires both client &amp;amp; server to have same protobuf definition. Client and server usually are not defined in the same repository.
We can use a separate git repository to store the protobuf definition, and using the git submodule to include the protobuf definition in the corresponding client and server.
Check sample repo to see how to setup
A simple prost example Sometime you only want to use protobuf to do serializing and deserializing the message, nothing else. In this case, you will need to use prost only.
Here is a simplest example of how to do that.</description></item><item><title>Painless key mapping on windows</title><link>https://lmjw.github.io/post/windowkeymapping/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/windowkeymapping/</guid><description>Recently, I start to using windows for my personal project. One thing I hate about is the keyboard mappings.
I want to basically do the following mappings
1 Caps lock key -&amp;gt; Left Ctrl key 2 Left Alt key -&amp;gt; Left Ctrl key 3 Left Windows key -&amp;gt; Left Alt key
I was using the . The first two key mapping works fine, however, the third mapping has the problem. For example, &amp;ldquo;Win+W&amp;rdquo; should suppose to map to &amp;ldquo;Alt+W&amp;rdquo; which corresponding to the &amp;ldquo;Copy&amp;rdquo; in emacs, however, it opens the &amp;ldquo;Pen&amp;rdquo; app in the Windows.
I did some research, and found another tool, which called the AutoHotKey.</description></item><item><title>Learning OS dev notes</title><link>https://lmjw.github.io/post/2021-05-17-notes-about-learning-os-dev/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2021-05-17-notes-about-learning-os-dev/</guid><description>Notes about learning OS dev: [1] A minimal kernel Below are list of references that I used to learn
A minimal Multiboot Kernel HelloOS What is the minimal setting/configuration we need to have so we can boot a minimal kernel? Assuming we are using GRUB boot loader, it seems to me we need to have 4 files to be able to boot a minimal kernel.
… ├── Makefile └── src └── arch └── x86_64 ├── multiboot_header.asm ├── boot.asm ├── linker.ld └── grub.cfg Let&amp;rsquo;s go through these files one by one.
multiboot_header.asm To know what is this, we need to know how boot works.</description></item><item><title>Data Oriented Design</title><link>https://lmjw.github.io/post/2019-11-24-data-oriented-design/</link><pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2019-11-24-data-oriented-design/</guid><description>Data Oriented Design Check out the video. This explains the AOS and SOA very well. data orientied design
The following code is a common pattern in Object oriented programming.
struct Entity{ v3 postion, v3 velocity, int flag, virtual void update() } struct Player: public Entity{ float life, float mana, void update() override; } struct Monster: public Entity{ float life, void update() override; } sturct Door: public Entity{ bool current_status, float open_target, void update(); } There are few problems with this approach:
Memory allocation. In this objected orientied approach, because we inherited Entity objects and added some fields in child object, the size of the new Object can have different sizes.</description></item><item><title>Intro to deep learning notes</title><link>https://lmjw.github.io/post/2019-06-12-intro-to-deep-learning-notes/</link><pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2019-06-12-intro-to-deep-learning-notes/</guid><description>This is a note for MIT 6.S191 course
link
course 1. Intro to deep learning The Perceptron: Forward Propagation
Single layer neural network with tensorflow:
from tf.keras.layers import * inputs = Inputs(m) hidden = Dense(d1)(inputs) outputs = Dense(d2)(hidden) model = Model(inputs, outputs) This four lines of code computes the single layer NN.
Deep Neural Network
More hidden layers
Applying Neural Networks
Quantifying Loss
Compare Predicted loss vs actual loss
Minimize loss
Different loss functions
Binary cross entropy loss loss = tf.reduce_mean( tf.nn.softmax_cross_entropy_with_logits( model.y, model.pred )) Mean squared error loss loss = tf.</description></item><item><title>A explanation of Open ssl certification</title><link>https://lmjw.github.io/post/2018-01-05-openssl-basic-concepts/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2018-01-05-openssl-basic-concepts/</guid><description>Open SSL certificate authority Statement: This is just a study notes in order to understand the Open SSL and some relating concepts. A lot of contents in this article are copied from Jamie Nguyen&amp;rsquo;s blog OpenSSL Certificate Authority
Article summary(without Certificate revocation lists) The following graph summarizes the relationship between different keys and certificates. Certificate authority A certificate authority (CA) is an entity that signs digital certificates. Many websites need to let their customers know that the connection is secure, so they pay an internationally trusted CA (eg, VeriSign, DigiCert) to sign a certificate for their domain.
In some cases it may make more sense to act as your own CA, rather than paying a CA like DigiCert.</description></item><item><title>A python example of realizing secure grpc communication</title><link>https://lmjw.github.io/post/2018-01-05-python-ssl-grpc-implementation/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2018-01-05-python-ssl-grpc-implementation/</guid><description>A python example of realizing secure grpc communication Useful links and references: Here are some links that I found it can be helpful when I was trying to work out how to setup the python ssl communication.
Secure gRPC with TLS/SSL, This is golang implementation
certstrap, a convienient tool to generate openssl keys and certificate
gRPC authentication, the official guide of grpc
grpcio, python package, the source code and official document of grpc python
grpc golang ssl example, another golang example of ssl communication
What is the difference between .pem , .csr , .key and .crt?, a stackexchange question which explains the concepts and differences of different types of files</description></item><item><title>A simple example of using docker container to realize the grpc client and server communication</title><link>https://lmjw.github.io/post/2017-12-26-docker-grpc-network/</link><pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-12-26-docker-grpc-network/</guid><description>First, build a docker container that contains all required packages. In this example, I choose ubuntu:bionic as the basic image, and I installed other packages onto it.
FROM ubuntu:bionic RUN apt-get update RUN apt-get install python3 -y RUN apt-get install python3-pip -y RUN pip3 install grpcio ADD app /app/ EXPOSE 22222 The Dockerfile is shown above. In the app file, it contains 4 files. They are:
client.py, server.py, test_pb2.py, test_pb2_grpc.py
test_pb2.py and test_pb2_grpc.py is generated by compiling the test.protofile. The content for test.proto is shown below.
syntax = &amp;quot;proto3&amp;quot;; package lmjwtest; // service, encode a plain text service EncodeService { // request a service of encode rpc GetEncode(plaintext) returns (encodetext) {} } message plaintext { string pttransactionID = 1; string ptproperties = 2; string ptsenderID = 3; } message encodetext { string enctransactionID = 1; string encproperties = 2; string encsenderID = 3; } By using the grpcio-tools to compile the test.</description></item><item><title>Kubernete's tutorial notes</title><link>https://lmjw.github.io/post/2017-12-06-kubernetes/</link><pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-12-06-kubernetes/</guid><description>#Some concepts of Kubernetes Clusters
Kubernetes cluster(KC) can be analogy to the conventional computational cluster, which includes many computers and to work as a single unit.
application runs on the KC needs to be containerized.
the program organizing the KC, namely Kubernete, manage the deployment and make containerized application run in KC in a more efficient way.
Kubernetes cluster structure Master ( act as a manager): coordinate the cluster Nodes (act as worker, the job of work is to run the containerize application) Master responsibilities : coordinate activities in cluster scheduling application maintaining application states scaling application rolling new updates Node(worker) definition of Node: A node can be a VM or a physical computer that serves as a worker machine in a KC.</description></item><item><title>Install GMP on windows 10 machine</title><link>https://lmjw.github.io/post/2017-11-30-install-gmp-on-windows10-machine/</link><pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-30-install-gmp-on-windows10-machine/</guid><description>&lt;p>Recently, I was trying to install &lt;a href="https://gmplib.org/#DOWNLOAD" target="_blank">GMP library&lt;/a> on my windows 10 machine.&lt;/p>
&lt;p>The first problem that I was facing is&lt;/p>
&lt;blockquote>
&lt;p>&amp;lsquo;gcc&amp;rsquo; is not recognized as an internal or external command, operable program or batch file.&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;p>Then I did some searches and I found &lt;a href="https://suchideas.com/journal/2007/7/installing-gmp-on-windows" target="_blank">this page&lt;/a> which showed how to install GMP on windows. However, it is a bit outdated, I still encounter some problems in following its steps. Luckily I figured out how to solve the problems and installed the GMP successfully.&lt;/p></description></item><item><title>python subprocess</title><link>https://lmjw.github.io/post/2017-11-28-python-subprocess/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-28-python-subprocess/</guid><description>Python subprocess examples Description This is a collection of python subprocess examples for easy usage. Although I found the python documents are very comprehensive, I found there is not much examples of showing how to use. This document act as a note of how to use python subprocess package.
Environment settings OS Windows 10 home python Anaconda, python 3.6.3 Main functions subprocess.run() the code is executed in IDLE command line window.
&amp;gt;&amp;gt;&amp;gt; import subprocess as sb &amp;gt;&amp;gt;&amp;gt; bash_exec = &amp;quot;C:\\Program Files\\Git\\bin\\bash.exe&amp;quot; &amp;gt;&amp;gt;&amp;gt; sb.run([bash_exe, '-c','pwd'], stdout=sb.PIPE) CompletedProcess(args=[&amp;lsquo;C:\Program Files\Git\bin\bash.</description></item><item><title>An experiment using golang and python to execute command in docker</title><link>https://lmjw.github.io/post/2017-11-26-blog-docker-python-golang/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-26-blog-docker-python-golang/</guid><description>&lt;h4 id="description">Description:&lt;/h4>
&lt;p>Using golang to execute python code, which can in turn execute docker command to control docker container.&lt;/p></description></item><item><title>我的软件清单</title><link>https://lmjw.github.io/post/2016-03-05-my-favourit-softwares/</link><pubDate>Sat, 05 Mar 2016 21:48:00 +0800</pubDate><guid>https://lmjw.github.io/post/2016-03-05-my-favourit-softwares/</guid><description>&lt;p>&lt;strong>为了方便查看，我将本贴收录在我的博客中，请支持此贴的原作者，&lt;a href="https://tianqi.name/blog/" target="_blank">田琦的博客&lt;/a>&lt;/strong>&lt;/p>
&lt;p>整理了下自己喜欢的软件，列出了这个清单。&lt;/p>
&lt;p>我的原则是：尽量使用免费开源软件，不使用破解软件。&lt;/p>
&lt;p>&lt;strong>本文长期更新，欢迎推荐。&lt;/strong>&lt;/p></description></item><item><title>Markdown Style Guide</title><link>https://lmjw.github.io/post/2014-3-3-markdown-style-guide/</link><pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2014-3-3-markdown-style-guide/</guid><description>This is a forked syntax cheatsheet for Jekyll.
View the markdown used to create this post.
[View the markdown used to create this post](https://raw.githubusercontent.com/barryclark/www.jekyllnow.com/gh-pages/_posts/2014-6-19-Markdown-Style-Guide.md).
This is a paragraph, it&amp;rsquo;s surrounded by whitespace. Next up are some headers, they&amp;rsquo;re heavily influenced by GitHub&amp;rsquo;s markdown style.
Header 2 (H1 is reserved for post titles)## ## Header 2 (H1 is reserved for post titles)##
Header 3 ### Header 3
Header 4 #### Header 4
A link to Jekyll Now. A big ass literal link http://github.com/barryclark/jekyll-now/
A link to [Jekyll Now](http://github.com/barryclark/jekyll-now/). A big ass literal link &amp;lt;http://github.com/barryclark/jekyll-now/&amp;gt;
An image, located within /images</description></item><item><title>common knowledge cheat sheet</title><link>https://lmjw.github.io/post/smalllearning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/smalllearning/</guid><description>Rust String.push(char) takes char Vec has reverse method where as iterator has rev method String and &amp;amp;str both have chars method that convert string to Char String and &amp;amp;str can be split_whitespace they also can call split(pat: P) e.g split(' ') is equivalent to split by whitespace NOTE: in rust usize -1 could overflow to max, this might causing algorithm not working properly If we are dealing with linked list with Option&amp;lt;Box&amp;lt;Node&amp;gt;&amp;gt;, we can potentially using Box::clone() to overcome some limitation due to borrow checker Docker Docker can be run with --network=host on windows, but as stated by reference, quote:</description></item></channel></rss>