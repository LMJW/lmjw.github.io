<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>subprocess on LMJW Blog</title><link>https://lmjw.github.io/tags/subprocess/</link><description>Recent content in subprocess on LMJW Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 28 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://lmjw.github.io/tags/subprocess/index.xml" rel="self" type="application/rss+xml"/><item><title>python subprocess</title><link>https://lmjw.github.io/post/2017-11-28-python-subprocess/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-28-python-subprocess/</guid><description>Python subprocess examples Description This is a collection of python subprocess examples for easy usage. Although I found the python documents are very comprehensive, I found there is not much examples of showing how to use. This document act as a note of how to use python subprocess package.
Environment settings OS Windows 10 home python Anaconda, python 3.6.3 Main functions subprocess.run() the code is executed in IDLE command line window.
&amp;gt;&amp;gt;&amp;gt; import subprocess as sb &amp;gt;&amp;gt;&amp;gt; bash_exec = &amp;quot;C:\\Program Files\\Git\\bin\\bash.exe&amp;quot; &amp;gt;&amp;gt;&amp;gt; sb.run([bash_exe, '-c','pwd'], stdout=sb.PIPE) CompletedProcess(args=[&amp;lsquo;C:\Program Files\Git\bin\bash.</description></item><item><title>An experiment using golang and python to execute command in docker</title><link>https://lmjw.github.io/post/2017-11-26-blog-docker-python-golang/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-26-blog-docker-python-golang/</guid><description>&lt;h4 id="description">Description:&lt;/h4>
&lt;p>Using golang to execute python code, which can in turn execute docker command to control docker container.&lt;/p></description></item></channel></rss>