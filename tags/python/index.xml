<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on LMJW Blog</title><link>https://lmjw.github.io/tags/python/</link><description>Recent content in python on LMJW Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 12 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://lmjw.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Intro to deep learning notes</title><link>https://lmjw.github.io/post/2019-06-12-intro-to-deep-learning-notes/</link><pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2019-06-12-intro-to-deep-learning-notes/</guid><description>This is a note for MIT 6.S191 course
link
course 1. Intro to deep learning The Perceptron: Forward Propagation
Single layer neural network with tensorflow:
from tf.keras.layers import * inputs = Inputs(m) hidden = Dense(d1)(inputs) outputs = Dense(d2)(hidden) model = Model(inputs, outputs) This four lines of code computes the single layer NN.
Deep Neural Network
More hidden layers
Applying Neural Networks
Quantifying Loss
Compare Predicted loss vs actual loss
Minimize loss
Different loss functions
Binary cross entropy loss loss = tf.reduce_mean( tf.nn.softmax_cross_entropy_with_logits( model.y, model.pred )) Mean squared error loss loss = tf.</description></item><item><title>A python example of realizing secure grpc communication</title><link>https://lmjw.github.io/post/2018-01-05-python-ssl-grpc-implementation/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2018-01-05-python-ssl-grpc-implementation/</guid><description>A python example of realizing secure grpc communication Useful links and references: Here are some links that I found it can be helpful when I was trying to work out how to setup the python ssl communication.
Secure gRPC with TLS/SSL, This is golang implementation
certstrap, a convienient tool to generate openssl keys and certificate
gRPC authentication, the official guide of grpc
grpcio, python package, the source code and official document of grpc python
grpc golang ssl example, another golang example of ssl communication
What is the difference between .pem , .csr , .key and .crt?, a stackexchange question which explains the concepts and differences of different types of files</description></item><item><title>python subprocess</title><link>https://lmjw.github.io/post/2017-11-28-python-subprocess/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-28-python-subprocess/</guid><description>Python subprocess examples Description This is a collection of python subprocess examples for easy usage. Although I found the python documents are very comprehensive, I found there is not much examples of showing how to use. This document act as a note of how to use python subprocess package.
Environment settings OS Windows 10 home python Anaconda, python 3.6.3 Main functions subprocess.run() the code is executed in IDLE command line window.
&amp;gt;&amp;gt;&amp;gt; import subprocess as sb &amp;gt;&amp;gt;&amp;gt; bash_exec = &amp;quot;C:\\Program Files\\Git\\bin\\bash.exe&amp;quot; &amp;gt;&amp;gt;&amp;gt; sb.run([bash_exe, '-c','pwd'], stdout=sb.PIPE) CompletedProcess(args=[&amp;lsquo;C:\Program Files\Git\bin\bash.</description></item><item><title>An experiment using golang and python to execute command in docker</title><link>https://lmjw.github.io/post/2017-11-26-blog-docker-python-golang/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://lmjw.github.io/post/2017-11-26-blog-docker-python-golang/</guid><description>&lt;h4 id="description">Description:&lt;/h4>
&lt;p>Using golang to execute python code, which can in turn execute docker command to control docker container.&lt;/p></description></item></channel></rss>